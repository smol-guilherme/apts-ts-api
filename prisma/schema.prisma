datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Users {
  id             String      @id @default(uuid())
  createdAt      DateTime    @default(now())
  email          String      @unique
  username       String
  password       String
  profilePicture String
  role           Role        @default(USER)
  posts          Posts[]
  relations      Relations[]
  Stars          Stars[]

  @@map("users")
}

model Relations {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  follower   Users    @relation(fields: [followerId], references: [id])
  followerId String

  @@map("relations")
}

model Posts {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String   @db.VarChar(255)
  description String
  author      Users    @relation(fields: [authorId], references: [id])
  authorId    String
  location    Places   @relation(fields: [locationId], references: [id])
  locationId  String
  stars       Stars[]

  @@map("posts")
}

model Stars {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  user      Users    @relation(fields: [userId], references: [id])
  userId    String
  post      Posts    @relation(fields: [postId], references: [id])
  postId    String

  @@map("stars")
}

model Places {
  id           String         @id @default(uuid())
  createdAt    DateTime       @default(now())
  posts        Posts[]
  locationName String
  latitude     Int
  longitude    Int
  tags         Tags[]
  type         Establishments

  @@map("locations")
}

model Tags {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  tagName   String
  place     Places   @relation(fields: [placeId], references: [id])
  placeId   String

  @@map("tags")
}

enum Establishments {
  RESTAURANT
  BAR
  COFFEESHOP
}

enum Role {
  USER
  STAR
  ADMIN
}
